parameters:
  health_check_bundle_health_check_path: '/health-check'
  health_check_bundle_status_path: '/status'
  health_check_bundle_enable_status_readiness_inspector: false
  health_check_bundle_status_is_ready: false

services:
  _defaults:
    autowire: true
    autoconfigure: true

  SmartAssert\HealthCheckBundle\Controller\HealthCheckController:
    arguments:
      $serviceStatusInspector: '@smartassert.health_check_bundle.service_status_inspector.health_check'
    tags: ['controller.service_arguments']

  SmartAssert\HealthCheckBundle\Controller\StatusController:
    arguments:
      $serviceStatusInspector: '@smartassert.health_check_bundle.service_status_inspector.status'
    tags: ['controller.service_arguments']

  SmartAssert\DoctrineInspectors\QueryInspector: ~
  SmartAssert\DoctrineInspectors\EntityMappingInspector: ~

  smartassert.health_check_bundle.doctrine_inspectors.query:
    class: SmartAssert\HealthCheckBundle\Services\DoctrineInspector
    arguments:
      $inspector: '@SmartAssert\DoctrineInspectors\QueryInspector'
      $identifier: 'database_connection'
    tags:
      - { name: 'health_check_bundle.component_inspector.health_check' }

  smartassert.health_check_bundle.doctrine_inspectors.entity_mapping:
    class: SmartAssert\HealthCheckBundle\Services\DoctrineInspector
    arguments:
      $inspector: '@SmartAssert\DoctrineInspectors\EntityMappingInspector'
      $identifier: 'database_entities'
    tags:
      - { name: 'health_check_bundle.component_inspector.health_check' }

  SmartAssert\InvokableLogger\ExceptionLogger: ~

  SmartAssert\HealthCheckBundle\Services\ExceptionLogger:
    arguments:
      $invokableExceptionLogger: '@SmartAssert\InvokableLogger\ExceptionLogger'
    tags:
      - { name: 'health_check_bundle.exception_logger.health_check' }
      - { name: 'health_check_bundle.exception_logger.status' }

  smartassert.health_check_bundle.service_status_inspector.health_check:
    class: SmartAssert\ServiceStatusInspector\ServiceStatusInspector
    public: true
    calls:
      - setComponentInspectors: [!tagged { tag: 'health_check_bundle.component_inspector.health_check' }]
      - setExceptionHandlers: [!tagged { tag: 'health_check_bundle.exception_logger.health_check' }]

  smartassert.health_check_bundle.service_status_inspector.status:
    class: SmartAssert\ServiceStatusInspector\ServiceStatusInspector
    public: true
    calls:
      - setComponentInspectors: [!tagged { tag: 'health_check_bundle.component_inspector.status' }]
      - setExceptionHandlers: [!tagged { tag: 'health_check_bundle.exception_logger.status' }]

  smartassert.health_check_bundle.component_inspectors.readiness:
    class: SmartAssert\ServiceStatusInspector\ComponentInspector
    arguments:
      $identifier: 'ready'
      $isAvailable: '%health_check_bundle_status_is_ready%'

when@test*:
  imports:
    - { resource: services_test.yaml }

when@test_readiness_inspector_enabled_and_false:
  imports:
    - { resource: services_test.yaml }

  parameters:
    health_check_bundle_enable_status_readiness_inspector: true
    health_check_bundle_status_is_ready: false

when@test_readiness_inspector_enabled_and_true:
  imports:
    - { resource: services_test.yaml }

  parameters:
    health_check_bundle_enable_status_readiness_inspector: true
    health_check_bundle_status_is_ready: true
